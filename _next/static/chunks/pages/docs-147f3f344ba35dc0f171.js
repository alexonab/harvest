(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[172],{1536:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return r}});var o=t(5893),l=t(7317);function r(e){var n=e.lang,t=e.value;return void 0===n&&(n="text"),void 0===t&&(t="Hello World"),(0,o.jsx)(l.Z,{language:n,customStyle:"",useInlineStyles:!1,children:t})}},3899:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return d}});var o=t(5893),l=t(4139),r=t.n(l),s=t(1536),a=JSON.parse('{"gtc":"Good-Til-Cancelled"}');function i(e,n){var t;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=function(e,n){if(!e)return;if("string"===typeof e)return u(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return u(e,n)}(e))||n&&e&&"number"===typeof e.length){t&&(e=t);var o=0,l=function(){};return{s:l,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,s=!0,a=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return s=e.done,e},e:function(e){a=!0,r=e},f:function(){try{s||null==t.return||t.return()}finally{if(a)throw r}}}}function u(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}function c(e){return e in a?a[e]:"404"}function d(e){var n=e.dict;if(void 0===n)return(0,o.jsx)("p",{children:":)"});var t=function(e){var n,t=[],l=i(e.params);try{for(l.s();!(n=l.n()).done;){var s=n.value,a=s.desc;void 0===a&&(a="");var u,d=/{[^{}]+}/g,f=a.match(d),p=a.split(d),m=[],y="",h=null,_=i(p);try{for(_.s();!(u=_.n()).done;){var b=u.value;m.push(b),null!==f&&f.length>0&&(y=f.shift().replace(/[{}]/g,""),h=(0,o.jsx)("span",{children:c(y)}),m.push((0,o.jsxs)("span",{className:r().lookup,children:[h,y]})))}}catch(g){_.e(g)}finally{_.f()}t.push((0,o.jsxs)("div",{children:[(0,o.jsxs)("p",{className:r().paramName,children:["\u2022 ",s.name]}),(0,o.jsxs)("p",{className:r().paramType,children:["\xa0(",s.type,"):"]}),(0,o.jsx)("p",{children:m}),(0,o.jsx)("p",{className:r().paramDef,children:s.default}),(0,o.jsx)("p",{children:f})]}))}}catch(g){l.e(g)}finally{l.f()}return t}(n),l=function(e){var n,t=[],l=i(e.raises);try{for(l.s();!(n=l.n()).done;){var r=n.value;t.push((0,o.jsxs)("li",{children:[(0,o.jsx)("span",{children:r.type+": "}),r.desc]}))}}catch(s){l.e(s)}finally{l.f()}return t}(n),a=function(e){var n,t=[],l=e.returns,r=l.match(/(\s*\n\s*- .+)+/g),s=i(l.split(/\s*- [^\n]*/).filter((function(e){return e.length>0})));try{for(s.s();!(n=s.n()).done;){var a=n.value;if(t.push((0,o.jsx)("p",{children:a})),null!==r&&r.length>0){var u,c=r.shift().match(/-.*[^\n]/g),d=[],f=i(c);try{for(f.s();!(u=f.n()).done;){var p=u.value;d.push((0,o.jsx)("li",{children:p.replace(/- /,"")}))}}catch(m){f.e(m)}finally{f.f()}t.push((0,o.jsx)("ul",{children:d}))}}}catch(m){s.e(m)}finally{s.f()}return t}(n);return(0,o.jsxs)("div",{className:r().entry,id:n.index,children:[(0,o.jsx)(s.default,{lang:"python",value:n.function}),(0,o.jsx)("p",{children:n.short_description}),(0,o.jsx)("p",{className:r().longDesc,children:n.long_description}),(0,o.jsxs)("div",{className:r().paramHeader,children:[(0,o.jsx)("h3",{children:"Params:"}),(0,o.jsx)("h4",{children:"Default"}),t]}),(0,o.jsxs)("div",{className:r().paramReturn,children:[(0,o.jsx)("h3",{children:"Returns:"}),a]}),(0,o.jsxs)("div",{className:r().paramRaise,children:[(0,o.jsx)("h3",{children:"Raises:"}),(0,o.jsx)("ul",{className:r().raises,children:l})]})]})}a.returns},6793:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return r}});var o=t(5893),l=t(9008);function r(e){e.c;var n=e.title;return(0,o.jsxs)(l.default,{children:[(0,o.jsx)("title",{children:n}),(0,o.jsx)("meta",{name:"description",content:""}),(0,o.jsx)("link",{rel:"icon",href:"/favicon.ico"})]})}},4705:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return a}});var o=t(5893),l=t(5323),r=t.n(l),s=t(1664);function a(){return(0,o.jsxs)("nav",{className:r().nav,children:[(0,o.jsxs)("div",{children:[(0,o.jsx)(s.default,{href:"/tutorial",children:(0,o.jsx)("a",{children:"Tutorials"})}),(0,o.jsx)(s.default,{href:"/docs",children:(0,o.jsx)("a",{children:"Docs"})})]}),(0,o.jsx)(s.default,{href:"https://github.com/tfukaza/harvest",children:"GitHub"})]})}},123:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return _}});var o=t(5893),l=t(4705),r=t(6793),s=t(3899),a=t(1664),i=t(5323),u=t.n(i),c=t(4139),d=t.n(c),f=t(5016),p=t.n(f),m=JSON.parse('[{"function":"buy(self, symbol, quantity, in_force, extended)","index":"buy","short_description":"Buys the specified asset.","long_description":"When called, Harvests places a limit order with a limit\\nprice 5% higher than the current price.","params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to buy. ","default":"first symbol in watch","optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to buy. ","default":"1","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not. ","default":"False","optional":true}],"returns":"The following Python dictionary\\n- type: str, \'STOCK\' or \'CRYPTO\'\\n- id: str, ID of order\\n- symbol: str, symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"buy_option(self, symbol, quantity, in_force)","index":"buy_option","short_description":"Buys the specified option.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to buy, in OCC format","default":null,"optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to bu","default":null,"optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in forc","default":null,"optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'OPTION\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"sell(self, symbol, quantity, in_force, extended)","index":"sell","short_description":"Sells the specified asset.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to sel","default":null,"optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to sel","default":null,"optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in forc","default":null,"optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not","default":null,"optional":true}],"returns":"A dictionary with the following keys:\\n- type: str, \'STOCK\' or \'CRYPTO\'\\n- id: str, ID of order\\n- symbol: str, symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"sell_option(self, symbol, quantity, in_force)","index":"sell_option","short_description":"Sells the specified option.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to buy, in OCC format","default":null,"optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to bu","default":null,"optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in forc","default":null,"optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'OPTION\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"await_buy(self, symbol, quantity, in_force, extended)","index":"await_buy","short_description":"Buys the specified asset, and hangs the code until the order is filled. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to bu","default":null,"optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to bu","default":null,"optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in forc","default":null,"optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not","default":null,"optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'STOCK\' or \'CRYPTO\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"await_sell(self, symbol, quantity, in_force, extended)","index":"await_sell","short_description":"Sells the specified asset, and hangs the code until the order is filled. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to bu","default":null,"optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to bu","default":null,"optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in forc","default":null,"optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not","default":null,"optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'STOCK\' or \'CRYPTO\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"get_option_market_data(self, symbol)","index":"get_option_market_data","short_description":"Retrieves data of specified option. ","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Occ symbol of optio","default":null,"optional":null}],"returns":"A dictionary:\\n- price: price of option \\n- ask: ask price\\n- bid: bid price\\n}","raises":[]},{"function":"get_chain_data(self, symbol)","index":"get_chain_data","short_description":"Returns the option chain for the specified symbol. ","long_description":null,"params":[{"name":"symbol","type":null,"desc":"symbol of stoc","default":null,"optional":null}],"returns":"A dataframe in the following format:\\n            exp_date strike  type    id\\n    OCC\\n    ---     ---      ---     ---     ---     \\n- OCC: the chain symbol in OCC format","raises":[]},{"function":"get_chain_info(self, symbol)","index":"get_chain_info","short_description":"Returns information about the symbol\'s options","long_description":null,"params":[{"name":"symbol","type":null,"desc":"symbol of stoc","default":null,"optional":null}],"returns":"A dict with the following keys:\\n- id: ID of the option chain \\n- exp_dates: List of expiration dates, in the fomrat \\"YYYY-MM-DD\\" \\n- multiplier: Multiplier of the option, usually 100","raises":[]},{"function":"ema(self, symbol, period, interval, ref)","index":"ema","short_description":"Calculate EMA","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol to perform calculation o","default":null,"optional":null},{"name":"period","type":null,"desc":"Period of EM","default":null,"optional":null},{"name":"interval","type":null,"desc":"Interval to perform the calculatio","default":null,"optional":null},{"name":"ref","type":null,"desc":"\'close\', \'open\', \'high\', or \'low","default":null,"optional":null}],"returns":"A list in numpy format, containing EMA values","raises":[]},{"function":"rsi(self, symbol, period, interval, ref)","index":"rsi","short_description":"Calculate RSI","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol to perform calculation o","default":null,"optional":null},{"name":"period","type":null,"desc":"Period of RS","default":null,"optional":null},{"name":"interval","type":null,"desc":"Interval to perform the calculatio","default":null,"optional":null},{"name":"ref","type":null,"desc":"\'close\', \'open\', \'high\', or \'low","default":null,"optional":null}],"returns":"A list in numpy format, containing RSI values","raises":[]},{"function":"sma(self, symbol, period, interval, ref)","index":"sma","short_description":"Calculate SMA","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol to perform calculation o","default":null,"optional":null},{"name":"period","type":null,"desc":"Period of SM","default":null,"optional":null},{"name":"interval","type":null,"desc":"Interval to perform the calculatio","default":null,"optional":null},{"name":"ref","type":null,"desc":"\'close\', \'open\', \'high\', or \'low","default":null,"optional":null}],"returns":"A list in numpy format, containing SMA values","raises":[]},{"function":"bbands(self, symbol, period, interval, ref, dev)","index":"bbands","short_description":"Calculate Bollinger Bands","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol to perform calculation o","default":null,"optional":null},{"name":"period","type":null,"desc":"Period of BBan","default":null,"optional":null},{"name":"interval","type":null,"desc":"Interval to perform the calculatio","default":null,"optional":null},{"name":"ref","type":null,"desc":"\'close\', \'open\', \'high\', or \'low","default":null,"optional":null},{"name":"dev","type":null,"desc":"Standard deviation of the band","default":null,"optional":null}],"returns":"A tuple of numpy lists, each a list of BBand top, average, and bottom values","raises":[]},{"function":"bbands_raw(self, arr, symbol, period, interval, ref, dev)","index":"bbands_raw","short_description":"Calculate Bollinger Bands using given data","long_description":null,"params":[{"name":"arr","type":null,"desc":"List of prices as float to use in calculation of bollinger ban","default":null,"optional":null},{"name":"symbol","type":null,"desc":"Symbol to perform calculation o","default":null,"optional":null},{"name":"period","type":null,"desc":"Period of BBan","default":null,"optional":null},{"name":"interval","type":null,"desc":"Interval to perform the calculatio","default":null,"optional":null},{"name":"ref","type":null,"desc":"\'close\', \'open\', \'high\', or \'low","default":null,"optional":null},{"name":"dev","type":null,"desc":"Standard deviation of the band","default":null,"optional":null}],"returns":"A tuple of numpy lists, each a list of BBand top, average, and bottom values","raises":[]},{"function":"get_account_buying_power(self)","index":"get_account_buying_power","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_account_equity(self)","index":"get_account_equity","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_candle(self)","index":"get_candle","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_candle_list(self)","index":"get_candle_list","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_cost(self, symbol)","index":"get_cost","short_description":"Returns the average cost of a specified asset. ","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol of asse","default":null,"optional":null}],"returns":"Average cost of asset. Returns None if asset is not being tracked.","raises":[]},{"function":"get_date(self)","index":"get_date","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_datetime(self)","index":"get_datetime","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_price(self)","index":"get_price","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_price_list(self, symbol, interval)","index":"get_price_list","short_description":"Returns a list of recent prices for an asset. ","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol of asset","default":null,"optional":null},{"name":"interval","type":null,"desc":"Interval of data","default":null,"optional":null}],"returns":"Average cost of asset. Returns None if asset is not being tracked.","raises":[]},{"function":"get_quantity(self, symbol)","index":"get_quantity","short_description":"Returns the quantity owned of a specified asset. ","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol of asse","default":null,"optional":null}],"returns":"Quantity of asset. 0 if asset is not owned.","raises":[]},{"function":"get_returns(self, symbol)","index":"get_returns","short_description":"Returns the return of a specified asset. ","long_description":null,"params":[{"name":"symbol","type":null,"desc":"Symbol of stock, crypto, or option. Options should be in OCC format","default":null,"optional":null}],"returns":"Return of asset, expressed as a decimal. Returns None if asset is not owned.","raises":[]},{"function":"get_time(self)","index":"get_time","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]},{"function":"get_watch(self)","index":"get_watch","short_description":null,"long_description":null,"params":[],"returns":"","raises":[]}]');function y(e,n){var t;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=function(e,n){if(!e)return;if("string"===typeof e)return h(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return h(e,n)}(e))||n&&e&&"number"===typeof e.length){t&&(e=t);var o=0,l=function(){};return{s:l,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,s=!0,a=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return s=e.done,e},e:function(e){a=!0,r=e},f:function(){try{s||null==t.return||t.return()}finally{if(a)throw r}}}}function h(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}function _(){var e,n=[],t=[],i=y(m);try{for(i.s();!(e=i.n()).done;){var c=e.value;n.push((0,o.jsx)(s.default,{dict:c})),t.push((0,o.jsx)(a.default,{href:"/docs#"+c.index,passHref:!0,children:(0,o.jsx)("li",{children:c.index})}))}}catch(f){i.e(f)}finally{i.f()}return(0,o.jsxs)("div",{className:u().container,children:[(0,o.jsx)(r.default,{title:"Harvest | Documentation"}),(0,o.jsx)(l.default,{}),(0,o.jsxs)("main",{className:u().main,children:[(0,o.jsxs)("nav",{className:"".concat(d().nav," ").concat(p().card),children:[(0,o.jsx)("h3",{children:"Algo"}),(0,o.jsx)("ul",{children:t})]}),(0,o.jsxs)("section",{className:u().section,children:[(0,o.jsx)("h1",{children:"Documentation"}),(0,o.jsx)("h2",{className:d().className,children:"harvest.Algo"}),n]})]}),(0,o.jsx)("footer",{className:u().footer})]})}},4653:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs",function(){return t(123)}])},4139:function(e){e.exports={nav:"Doc_nav__2GF3d",className:"Doc_className__38Gp3",entry:"Doc_entry__10WMz",paramHeader:"Doc_paramHeader__3-mXJ",paramReturn:"Doc_paramReturn__35Fxt",paramRaise:"Doc_paramRaise__3igaR",lookup:"Doc_lookup__1eTBB",raises:"Doc_raises__2IpAt"}},5323:function(e){e.exports={container:"Home_container__1EcsU",main:"Home_main__1x8gC",nav:"Home_nav__1c1C3",landing:"Home_landing__3VX3f",section:"Home_section__16Giz",text:"Home_text__1sCQa",button:"Home_button__Xc9mA",col_card:"Home_col_card__3Qeme",col4:"Home_col4__soLh1",footer:"Home_footer__1WdhD",description:"Home_description__17Z4F",grid:"Home_grid__2Ei2F",card:"Home_card__2SdtB",logo:"Home_logo__1YbrH"}},5016:function(e){e.exports={button:"rowcrop_button__1n6eZ",card:"rowcrop_card__25eqx",col4:"rowcrop_col4__2ZQay"}}},function(e){e.O(0,[317,996,774,888,179],(function(){return n=4653,e(e.s=n);var n}));var n=e.O();_N_E=n}]);