(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[172],{2167:function(e,t,n){"use strict";var r=n(3848),o=n(9448);t.default=void 0;var s=o(n(7294)),i=n(9414),a=n(4651),l=n(7426),c={};function u(e,t,n,r){if(e&&(0,i.isLocalURL)(t)){e.prefetch(t,n,r).catch((function(e){0}));var o=r&&"undefined"!==typeof r.locale?r.locale:e&&e.locale;c[t+"%"+n+(o?"%"+o:"")]=!0}}var d=function(e){var t,n=!1!==e.prefetch,o=(0,a.useRouter)(),d=s.default.useMemo((function(){var t=(0,i.resolveHref)(o,e.href,!0),n=r(t,2),s=n[0],a=n[1];return{href:s,as:e.as?(0,i.resolveHref)(o,e.as):a||s}}),[o,e.href,e.as]),f=d.href,p=d.as,h=e.children,m=e.replace,y=e.shallow,_=e.scroll,b=e.locale;"string"===typeof h&&(h=s.default.createElement("a",null,h));var g=(t=s.Children.only(h))&&"object"===typeof t&&t.ref,v=(0,l.useIntersection)({rootMargin:"200px"}),x=r(v,2),w=x[0],j=x[1],S=s.default.useCallback((function(e){w(e),g&&("function"===typeof g?g(e):"object"===typeof g&&(g.current=e))}),[g,w]);(0,s.useEffect)((function(){var e=j&&n&&(0,i.isLocalURL)(f),t="undefined"!==typeof b?b:o&&o.locale,r=c[f+"%"+p+(t?"%"+t:"")];e&&!r&&u(o,f,p,{locale:t})}),[p,f,j,b,n,o]);var k={ref:S,onClick:function(e){t.props&&"function"===typeof t.props.onClick&&t.props.onClick(e),e.defaultPrevented||function(e,t,n,r,o,s,a,l){("A"!==e.currentTarget.nodeName||!function(e){var t=e.currentTarget.target;return t&&"_self"!==t||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey||e.nativeEvent&&2===e.nativeEvent.which}(e)&&(0,i.isLocalURL)(n))&&(e.preventDefault(),null==a&&r.indexOf("#")>=0&&(a=!1),t[o?"replace":"push"](n,r,{shallow:s,locale:l,scroll:a}))}(e,o,f,p,m,y,_,b)},onMouseEnter:function(e){(0,i.isLocalURL)(f)&&(t.props&&"function"===typeof t.props.onMouseEnter&&t.props.onMouseEnter(e),u(o,f,p,{priority:!0}))}};if(e.passHref||"a"===t.type&&!("href"in t.props)){var T="undefined"!==typeof b?b:o&&o.locale,R=o&&o.isLocaleDomain&&(0,i.getDomainLocale)(p,T,o&&o.locales,o&&o.domainLocales);k.href=R||(0,i.addBasePath)((0,i.addLocale)(p,T,o&&o.defaultLocale))}return s.default.cloneElement(t,k)};t.default=d},7426:function(e,t,n){"use strict";var r=n(3848);t.__esModule=!0,t.useIntersection=function(e){var t=e.rootMargin,n=e.disabled||!i,l=(0,o.useRef)(),c=(0,o.useState)(!1),u=r(c,2),d=u[0],f=u[1],p=(0,o.useCallback)((function(e){l.current&&(l.current(),l.current=void 0),n||d||e&&e.tagName&&(l.current=function(e,t,n){var r=function(e){var t=e.rootMargin||"",n=a.get(t);if(n)return n;var r=new Map,o=new IntersectionObserver((function(e){e.forEach((function(e){var t=r.get(e.target),n=e.isIntersecting||e.intersectionRatio>0;t&&n&&t(n)}))}),e);return a.set(t,n={id:t,observer:o,elements:r}),n}(n),o=r.id,s=r.observer,i=r.elements;return i.set(e,t),s.observe(e),function(){i.delete(e),s.unobserve(e),0===i.size&&(s.disconnect(),a.delete(o))}}(e,(function(e){return e&&f(e)}),{rootMargin:t}))}),[n,t,d]);return(0,o.useEffect)((function(){if(!i&&!d){var e=(0,s.requestIdleCallback)((function(){return f(!0)}));return function(){return(0,s.cancelIdleCallback)(e)}}}),[d]),[p,d]};var o=n(7294),s=n(3447),i="undefined"!==typeof IntersectionObserver;var a=new Map},1536:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});var r=n(5893),o=n(7317);function s(e){var t=e.lang,n=e.value;return void 0===t&&(t="text"),void 0===n&&(n="Hello World"),(0,r.jsx)(o.Z,{language:t,customStyle:"",useInlineStyles:!1,children:n})}},2833:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return l}});var r=n(5893),o=n(3679),s=n.n(o),i=n(1664),a=n(237);function l(){return(0,r.jsx)("footer",{className:s().footer,children:(0,r.jsxs)("section",{className:s().section,children:[(0,r.jsxs)("div",{children:[(0,r.jsx)(a.default,{src:"/wordmark.svg"}),(0,r.jsx)(i.default,{href:"https://github.com/tfukaza/harvest/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5B%F0%9F%AA%B0BUG%5D",children:"Report a Bug"}),(0,r.jsx)(i.default,{href:"https://github.com/tfukaza/harvest/issues/new?assignees=&labels=enhancement%2C+question&template=feature-request.md&title=%5B%F0%9F%92%A1Feature+Request%5D",children:"Suggest a Feature"})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{children:"Special thanks to these projects:"}),(0,r.jsx)(i.default,{href:"https://github.com/jmfernandes/robin_stocks",children:"robin_stocks"})]})]})})}},3899:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});var r=n(5893),o=n(4139),s=n.n(o),i=n(1536),a=JSON.parse('{"gtc":"Good-Til-Cancelled"}');function l(e,t){var n;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,i=!0,a=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,s=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw s}}}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function u(e){return e in a?a[e]:"404"}function d(e){var t=e.dict;if(void 0===t)return(0,r.jsx)("p",{children:":)"});var n=function(e){var t,n=[],o=l(e.params);try{for(o.s();!(t=o.n()).done;){var i=t.value,a=i.desc;void 0===a&&(a="");var c,d=/{[^{}]+}/g,f=a.match(d),p=a.split(d),h=[],m="",y=null,_=l(p);try{for(_.s();!(c=_.n()).done;){var b=c.value;h.push(b),null!==f&&f.length>0&&(m=f.shift().replace(/[{}]/g,""),y=(0,r.jsx)("span",{children:u(m)}),h.push((0,r.jsxs)("span",{className:s().lookup,children:[y,m]})))}}catch(g){_.e(g)}finally{_.f()}n.push((0,r.jsxs)("div",{children:[(0,r.jsxs)("p",{className:s().paramName,children:["\u2022 ",i.name]}),(0,r.jsxs)("p",{className:s().paramType,children:["\xa0(",i.type,"):"]}),(0,r.jsx)("p",{children:h}),(0,r.jsx)("p",{className:s().paramDef,children:i.default}),(0,r.jsx)("p",{children:f})]}))}}catch(g){o.e(g)}finally{o.f()}return n}(t),o=function(e){var t,n=[],o=l(e.raises);try{for(o.s();!(t=o.n()).done;){var s=t.value;n.push((0,r.jsxs)("li",{children:[(0,r.jsx)("span",{children:s.type+": "}),s.desc]}))}}catch(i){o.e(i)}finally{o.f()}return n}(t),a=function(e){var t,n=[],o=e.returns,s=o.match(/(\s*\n\s*- .+)+/g),i=l(o.split(/\s*- [^\n]*/).filter((function(e){return e.length>0})));try{for(i.s();!(t=i.n()).done;){var a=t.value;if(n.push((0,r.jsx)("p",{children:a})),null!==s&&s.length>0){var c,u=s.shift().match(/-.*[^\n]/g),d=[],f=l(u);try{for(f.s();!(c=f.n()).done;){var p=c.value;d.push((0,r.jsx)("li",{children:p.replace(/- /,"")}))}}catch(h){f.e(h)}finally{f.f()}n.push((0,r.jsx)("ul",{children:d}))}}}catch(h){i.e(h)}finally{i.f()}return n}(t);return(0,r.jsxs)("div",{className:s().entry,id:t.index,children:[(0,r.jsx)(i.default,{lang:"python",value:t.function}),(0,r.jsx)("p",{children:t.short_description}),(0,r.jsx)("p",{className:s().longDesc,children:t.long_description}),(0,r.jsxs)("div",{className:s().paramHeader,children:[(0,r.jsx)("h3",{children:"Params:"}),(0,r.jsx)("h4",{children:"Default"}),n]}),(0,r.jsxs)("div",{className:s().paramReturn,children:[(0,r.jsx)("h3",{children:"Returns:"}),a]}),(0,r.jsxs)("div",{className:s().paramRaise,children:[(0,r.jsx)("h3",{children:"Raises:"}),(0,r.jsx)("ul",{className:s().raises,children:o})]})]})}a.returns},4705:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return u}});var r=n(5893),o=n(3679),s=n.n(o),i=n(5016),a=n.n(i),l=n(1664),c=n(237);function u(){return(0,r.jsxs)("nav",{className:s().nav,children:[(0,r.jsx)("div",{children:(0,r.jsx)(l.default,{href:"/",passHref:!0,children:(0,r.jsx)("a",{id:s().logo,children:(0,r.jsx)(c.default,{src:"/wordmark.svg"})})})}),(0,r.jsxs)("div",{children:[(0,r.jsx)(l.default,{href:"/tutorial",children:(0,r.jsx)("a",{children:"Tutorials"})}),(0,r.jsx)(l.default,{href:"/docs",children:(0,r.jsx)("a",{children:"Docs"})})]}),(0,r.jsx)("div",{children:(0,r.jsx)(l.default,{href:"https://github.com/tfukaza/harvest",children:(0,r.jsx)("a",{className:"".concat(a().button," ").concat(s().github),children:"GitHub"})})})]})}},2966:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return b}});var r=n(5893),o=n(4705),s=n(6793),i=n(2833),a=n(3899),l=n(1664),c=n(3679),u=n.n(c),d=n(4139),f=n.n(d),p=n(5016),h=n.n(p),m=JSON.parse('[{"function":"buy(self, symbol, quantity, in_force, extended)","index":"buy","short_description":"Buys the specified asset.","long_description":"When called, Harvests places a limit order with a limit\\nprice 5% higher than the current price.","params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to buy. ","default":"first symbol in watchlist","optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to buy. ","default":"buys as many as possible","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not. ","default":"False","optional":true}],"returns":"The following Python dictionary\\n- type: str, \'STOCK\' or \'CRYPTO\'\\n- id: str, ID of order\\n- symbol: str, symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"buy_option(self, symbol, quantity, in_force)","index":"buy_option","short_description":"Buys the specified option.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to buy, in OCC format","default":null,"optional":false},{"name":"quantity","type":"float","desc":"Quantity of asset to buy. ","default":"buys as many as possible","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'OPTION\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"sell(self, symbol, quantity, in_force, extended)","index":"sell","short_description":"Sells the specified asset.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to sell. ","default":"first symbol in watchlist","optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to sell ","default":"sells all","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not. ","default":"False","optional":true}],"returns":"A dictionary with the following keys:\\n- type: str, \'STOCK\' or \'CRYPTO\'\\n- id: str, ID of order\\n- symbol: str, symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"sell_option(self, symbol, quantity, in_force)","index":"sell_option","short_description":"Sells the specified option.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to sell, in OCC format","default":null,"optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to sell. ","default":"sells all","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'OPTION\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"await_buy(self, symbol, quantity, in_force, extended)","index":"await_buy","short_description":"Buys the specified asset, and hangs the code until the order is filled. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to buy. ","default":"first symbol in watchlist","optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to buy. ","default":"buys as many as possible","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not. ","default":"False","optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'STOCK\' or \'CRYPTO\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"await_sell(self, symbol, quantity, in_force, extended)","index":"await_sell","short_description":"Sells the specified asset, and hangs the code until the order is filled. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of the asset to sell. ","default":"first symbol in watchlist","optional":true},{"name":"quantity","type":"float","desc":"Quantity of asset to sell ","default":"sells all","optional":true},{"name":"in_force","type":"str","desc":"Duration the order is in force. \'{gtc}\' or \'{gtd}\'. ","default":"\'gtc\'","optional":true},{"name":"extended","type":"str","desc":"Whether to trade in extended hours or not. ","default":"False","optional":true}],"returns":"A dictionary with the following keys:\\n- type: \'STOCK\' or \'CRYPTO\'\\n- id: ID of order\\n- symbol: symbol of asset","raises":[{"type":"Exception","desc":"There is an error in the order process."}]},{"function":"get_option_market_data(self, symbol)","index":"get_option_market_data","short_description":"Retrieves data of specified option. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"OCC symbol of optio","default":null,"optional":true}],"returns":"A dictionary:\\n- price: price of option \\n- ask: ask price\\n- bid: bid price","raises":[]},{"function":"get_chain_data(self, symbol)","index":"get_chain_data","short_description":"Returns the option chain for the specified symbol. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"symbol of stoc","default":null,"optional":true}],"returns":"A dataframe with the follwing columns:\\n    - exp_date(datetime.datetime): The expiration date\\n    - strike(float): Strike price\\n    - type(str): \'call\' or \'put\'\\n    - id(str): The unique ID of the option  \\n\\nThe index is the {OCC} symbol of the option.","raises":[]},{"function":"get_chain_info(self, symbol)","index":"get_chain_info","short_description":"Returns metadata about a stock\'s option chain","long_description":null,"params":[{"name":"symbol","type":"str","desc":"symbol of stock. ","default":"first symbol in watchlist","optional":true}],"returns":"A dict with the following keys:\\n- id: ID of the option chain \\n- exp_dates: List of expiration dates, in the fomrat \\"YYYY-MM-DD\\" \\n- multiplier: Multiplier of the option, usually 100","raises":[]},{"function":"ema(self, symbol, period, interval, ref, prices)","index":"ema","short_description":"Calculate EMA","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol to perform calculation on. ","default":"first symbol in watchlist","optional":true},{"name":"period","type":"int","desc":"Period of EMA. ","default":"14","optional":true},{"name":"interval","type":"str","desc":"Interval to perform the calculation. ","default":"interval of algorithm","optional":true},{"name":"ref","type":"str","desc":"\'close\', \'open\', \'high\', or \'low\'. ","default":"\'close\'","optional":true},{"name":"prices","type":"list","desc":"When specified, this function will use the values provided in the \\nlist to perform calculations and ignore other parameters. ","default":"None","optional":true}],"returns":"A list in numpy format, containing EMA values","raises":[]},{"function":"rsi(self, symbol, period, interval, ref, prices)","index":"rsi","short_description":"Calculate RSI","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol to perform calculation on. ","default":"first symbol in watchlist","optional":true},{"name":"period","type":"int","desc":"Period of RSI. ","default":"14","optional":true},{"name":"interval","type":"str","desc":"Interval to perform the calculation. ","default":"interval of algorithm","optional":true},{"name":"ref","type":"str","desc":"\'close\', \'open\', \'high\', or \'low\'. ","default":"\'close\'","optional":true},{"name":"prices","type":"list","desc":"When specified, this function will use the values provided in the \\nlist to perform calculations and ignore other parameters. ","default":"None","optional":true}],"returns":"A list in numpy format, containing RSI values","raises":[]},{"function":"sma(self, symbol, period, interval, ref, prices)","index":"sma","short_description":"Calculate SMA","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol to perform calculation on. ","default":"first symbol in watchlist","optional":true},{"name":"period","type":"int","desc":"Period of SMA. ","default":"14","optional":true},{"name":"interval","type":"str","desc":"Interval to perform the calculation. ","default":"interval of algorithm","optional":true},{"name":"ref","type":"str","desc":"\'close\', \'open\', \'high\', or \'low\'. ","default":"\'close\'","optional":true},{"name":"prices","type":"list","desc":"When specified, this function will use the values provided in the \\nlist to perform calculations and ignore other parameters. ","default":"None","optional":true}],"returns":"A list in numpy format, containing SMA values","raises":[]},{"function":"bbands(self, symbol, period, interval, ref, dev, prices)","index":"bbands","short_description":"Calculate Bollinger Bands","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol to perform calculation on. ","default":"first symbol in watchlist","optional":true},{"name":"period","type":"int","desc":"Period of BBands. ","default":"14","optional":true},{"name":"interval","type":"str","desc":"Interval to perform the calculation. ","default":"interval of algorithm","optional":true},{"name":"ref","type":"str","desc":"\'close\', \'open\', \'high\', or \'low\'. ","default":"\'close\'","optional":true},{"name":"dev","type":"float","desc":"Standard deviation of the bands. ","default":"1.0","optional":true},{"name":"prices","type":"list","desc":"When specified, this function will use the values provided in the \\nlist to perform calculations and ignore other parameters. ","default":"None","optional":true}],"returns":"A tuple of numpy lists, each a list of BBand top, average, and bottom values","raises":[]},{"function":"get_account_buying_power(self)","index":"get_account_buying_power","short_description":"Returns the current buying power of the user","long_description":null,"params":[],"returns":"The current buying power as a float.","raises":[]},{"function":"get_account_equity(self)","index":"get_account_equity","short_description":"Returns the current equity.","long_description":null,"params":[],"returns":"The current equity as a float.","raises":[]},{"function":"get_candle(self, symbol)","index":"get_candle","short_description":"Returns the most recent candle as a pandas DataFrame","long_description":"This function is not compatible with options.","params":[{"name":"symbol","type":"str","desc":"Symbol of stock or crypto asset. ","default":"first symbol in watchlist","optional":true}],"returns":"Price of asset as a dataframe with the following columns:\\n    - open\\n    - high\\n    - low\\n    - close\\n    - volume\\n\\nThe index is a datetime object","raises":[{"type":"Exception","desc":"If symbol is not in the watchlist."}]},{"function":"get_candle_list(self, symbol)","index":"get_candle_list","short_description":"Returns the candles of an asset as a pandas DataFrame","long_description":"This function is not compatible with options.","params":[{"name":"symbol","type":"str","desc":"Symbol of stock or crypto asset. ","default":"first symbol in watchlist","optional":true}],"returns":"Prices of asset as a dataframe with the following columns:\\n    - open\\n    - high\\n    - low\\n    - close\\n    - volume\\n\\nThe index is a datetime object","raises":[{"type":"Exception","desc":"If symbol is not in the watchlist."}]},{"function":"get_cost(self, symbol)","index":"get_cost","short_description":"Returns the average cost of a specified asset. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of asset. ","default":"first symbol in watchlist","optional":true}],"returns":"Average cost of asset. Returns None if asset is not being tracked.","raises":[{"type":"Exception","desc":"If symbol is not currently owned."}]},{"function":"get_date(self)","index":"get_date","short_description":"Returns the current date.","long_description":null,"params":[],"returns":"The current date as a datetime object","raises":[]},{"function":"get_datetime(self)","index":"get_datetime","short_description":"Returns the current date and time.","long_description":"This returns the current time, which is different from the timestamp\\non a ticker. For example, if you are running an algorithm every 5 minutes,\\nat 11:30am you will get a ticker for 11:25am. This function will return \\n11:30am.","params":[],"returns":"The current date and time as a datetime object","raises":[]},{"function":"get_price(self, symbol)","index":"get_price","short_description":"Returns the current price of a specified asset. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of asset. ","default":"first symbol in watchlist","optional":true}],"returns":"Price of asset.","raises":[{"type":"Exception","desc":"If symbol is not in the watchlist."}]},{"function":"get_price_list(self, symbol, interval, ref)","index":"get_price_list","short_description":"Returns a list of recent prices for an asset. ","long_description":"This function is not compatible with options.","params":[{"name":"symbol","type":"str","desc":"Symbol of stock or crypto asset. ","default":"first symbol in watchlist","optional":true},{"name":"interval","type":"str","desc":"Interval of data. ","default":"the interval of the algorithm","optional":true},{"name":"ref","type":"str","desc":"\'close\', \'open\', \'high\', or \'low\'. ","default":"\'close\'","optional":true}],"returns":"List of prices","raises":[]},{"function":"get_quantity(self, symbol)","index":"get_quantity","short_description":"Returns the quantity owned of a specified asset. ","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of asset. ","default":"first symbol in watchlist","optional":true}],"returns":"Quantity of asset.","raises":[{"type":"Exception","desc":"If symbol is not currently owned."}]},{"function":"get_returns(self, symbol)","index":"get_returns","short_description":"Returns the return of a specified asset.","long_description":null,"params":[{"name":"symbol","type":"str","desc":"Symbol of stock, crypto, or option. Options should be in OCC format. \\n","default":"first symbol in watchlist","optional":true}],"returns":"Return of asset, expressed as a decimal.","raises":[]},{"function":"get_time(self)","index":"get_time","short_description":"Returns the current hour and minute.","long_description":"This returns the current time, which is different from the timestamp\\non a ticker. For example, if you are running an algorithm every 5 minutes,\\nat 11:30am you will get a ticker for 11:25am. This function will return \\n11:30am.","params":[],"returns":"The current time as a datetime object","raises":[]}]');function y(e,t){var n;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return _(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,i=!0,a=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,s=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw s}}}}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function b(){var e,t=[],n=[],c=y(m);try{for(c.s();!(e=c.n()).done;){var d=e.value;t.push((0,r.jsx)(a.default,{dict:d})),n.push((0,r.jsx)(l.default,{href:"/docs#"+d.index,passHref:!0,children:(0,r.jsx)("li",{children:d.index})}))}}catch(p){c.e(p)}finally{c.f()}return(0,r.jsxs)("div",{className:u().container,children:[(0,r.jsx)(s.default,{title:"Harvest | Documentation"}),(0,r.jsx)(o.default,{}),(0,r.jsxs)("main",{className:u().main,children:[(0,r.jsxs)("nav",{className:"".concat(f().nav," ").concat(h().card),children:[(0,r.jsx)("h3",{children:"Algo"}),(0,r.jsx)("ul",{children:n})]}),(0,r.jsxs)("section",{className:u().section,children:[(0,r.jsx)("h1",{children:"Documentation"}),(0,r.jsx)("h2",{className:f().className,children:"harvest.Algo"}),t]})]}),(0,r.jsx)(i.default,{})]})}},4653:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs",function(){return n(2966)}])},4139:function(e){e.exports={nav:"Doc_nav__2GF3d",className:"Doc_className__38Gp3",entry:"Doc_entry__10WMz",paramHeader:"Doc_paramHeader__3-mXJ",paramReturn:"Doc_paramReturn__35Fxt",paramRaise:"Doc_paramRaise__3igaR",lookup:"Doc_lookup__1eTBB",raises:"Doc_raises__2IpAt"}},5016:function(e){e.exports={button:"rowcrop_button__1n6eZ",card:"rowcrop_card__25eqx",col4:"rowcrop_col4__2ZQay"}},3679:function(e){e.exports={container:"Home_container__3sao-",main:"Home_main__1Z1aG",nav:"Home_nav__2iapp",logo:"Home_logo__3GqVp",github:"Home_github__3XEl-",landing:"Home_landing__2U_o4",section:"Home_section__354aW",text:"Home_text__dq4ii",button:"Home_button__2hScn",col_card:"Home_col_card__6BIVE",col4:"Home_col4__2OXKu",footer:"Home_footer__2v49s"}},1664:function(e,t,n){e.exports=n(2167)}},function(e){e.O(0,[317,793,774,888,179],(function(){return t=4653,e(e.s=t);var t}));var t=e.O();_N_E=t}]);